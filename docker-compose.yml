version: '3.8'

services:
  # Frontend Next.js
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:8080
    depends_on:
      - backend
    networks:
      - tour-app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend Spring Boot (exemplo - ajuste conforme sua configuração)
  backend:
    image: tour-app-backend:latest  # Substitua pela sua imagem do backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/tourappdb
      - SPRING_DATASOURCE_USERNAME=tourapp
      - SPRING_DATASOURCE_PASSWORD=tourapp123
    depends_on:
      - database
    networks:
      - tour-app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Banco de dados PostgreSQL
  database:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=tourappdb
      - POSTGRES_USER=tourapp
      - POSTGRES_PASSWORD=tourapp123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - tour-app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tourapp -d tourappdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx como proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - tour-app-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  tour-app-network:
    driver: bridge